<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="15" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="柠檬前程贷" duration-ms="4173" started-at="2019-12-23T17:31:34Z" finished-at="2019-12-23T17:31:39Z">
    <groups>
    </groups>
    <test name="测试接口" duration-ms="4173" started-at="2019-12-23T17:31:34Z" finished-at="2019-12-23T17:31:39Z">
      <class name="cases.ProjectsListCase">
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.ProjectsListCase@2fe88a09]" name="test" duration-ms="241" started-at="2019-12-24T01:31:38Z" description="项目列表测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=4, name=projects_list, type=get, url=http://api.keyou.site:8000/projects/?page=1&size=50&ordering=1, contentType=form]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=13, detail=查看项目列表, params=1, apiId=4, expectedData=[{"value":"自动化测试平台项目","expression":"$.results[0].name"}], sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- cases.ProjectsListCase -->
      <class name="cases.ConfiguresCase">
        <test-method status="FAIL" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.ConfiguresCase@7e8a46b7]" name="test" duration-ms="83" started-at="2019-12-24T01:31:38Z" description="配置列表测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=3, name=configures, type=get, url=http://api.keyou.site:8000/configures/?page=1&size=50&ordering=1, contentType=form]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=12, detail=查看配置列表, params=1, apiId=3, expectedData=[{"value":"登录接口配置_自动化测试平台项目","expression":"$.results[0].namet"}], sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at cases.BaseCase.assertResponseData_aroundBody0(BaseCase.java:162)
	at cases.BaseCase$AjcClosure1.run(BaseCase.java:1)
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149)
	at io.qameta.allure.aspects.StepsAspects.step(StepsAspects.java:51)
	at cases.BaseCase.assertResponseData(BaseCase.java:151)
	at cases.BaseCase.test(BaseCase.java:85)
	at cases.ConfiguresCase.test(ConfiguresCase.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- cases.ConfiguresCase -->
      <class name="cases.LoginCase">
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.LoginCase@22fba58c]" name="test" duration-ms="69" started-at="2019-12-24T01:31:37Z" description="登录测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, type=post, url=http://api.keyou.site:8000/user/login/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=7, detail=传用户名，不传密码, params={"username":"121211@qq","email":"121211212@qq","password":"","password_confirm":""}, apiId=2, expectedData={"password":["该字段不能为空。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.LoginCase@22fba58c]" name="test" duration-ms="69" started-at="2019-12-24T01:31:37Z" description="登录测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, type=post, url=http://api.keyou.site:8000/user/login/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=8, detail=不传用户名，传密码, params={"username":"","email":"121211213@qq","password":"12345678","password_confirm":"12345678"}, apiId=2, expectedData={"username":["该字段不能为空。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.LoginCase@22fba58c]" name="test" duration-ms="209" started-at="2019-12-24T01:31:37Z" description="登录测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, type=post, url=http://api.keyou.site:8000/user/login/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=9, detail=未注册过账号, params={"username":"zhang55555555555555jibo@95+","password":"12345678"}, apiId=2, expectedData={"non_field_errors":["无法使用提供的认证信息登录。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.LoginCase@22fba58c]" name="test" duration-ms="193" started-at="2019-12-24T01:31:38Z" description="登录测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, type=post, url=http://api.keyou.site:8000/user/login/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=10, detail=注册过的账号, params={"username":"zhangjibo@95+","password":"12345678"}, apiId=2, expectedData=[{"value":262,"expression":"$.user_id"},{"value":"zhangjibo@95+","expression":"$.username"}], sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.LoginCase@22fba58c]" name="test" duration-ms="193" started-at="2019-12-24T01:31:38Z" description="登录测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=2, name=login, type=post, url=http://api.keyou.site:8000/user/login/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=11, detail=不满足条件的密码, params={"username":"zhangjibo@95+","password":"12  dd"}, apiId=2, expectedData={"non_field_errors":["无法使用提供的认证信息登录。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- cases.LoginCase -->
      <class name="cases.RegisterCase">
        <test-method status="FAIL" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="1338" started-at="2019-12-24T01:31:35Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=1, detail=正向用例, params={"username":"13905340472","email":"13900781331@qq.cpm","password":"12345678","password_confirm":"12345678"}, apiId=1, expectedData=[{"value":"${toBeRegisterUsername}","expression":"$.username"}], sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Pass] but found [Fail]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Pass] but found [Fail]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at cases.BaseCase.test(BaseCase.java:109)
	at cases.RegisterCase.test(RegisterCase.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="78" started-at="2019-12-24T01:31:37Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=2, detail=重复用户名, params={"username":"zhang23jibo@95+","email":"121221221@qq.com","password":"12345678","password_confirm":"12345678"}, apiId=1, expectedData={"username":["已存在一位使用该名字的用户。"],"email":["此邮箱已注册"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="74" started-at="2019-12-24T01:31:37Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=3, detail=重复邮箱, params={"username":"zha23ng23jibo@95+","email":"121221221@qq.com","password":"12345678","password_confirm":"12345678"}, apiId=1, expectedData={"email":["此邮箱已注册"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="75" started-at="2019-12-24T01:31:37Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=4, detail=2次密码不一致, params={"username":"zha23ng23jibo@953+","email":"12121221221@qq.com","password":"12345678","password_confirm":"123245678"}, apiId=1, expectedData={"non_field_errors":["两次输入密码不正确"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="73" started-at="2019-12-24T01:31:37Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=5, detail=不传参, params={"username":"","email":"","password":"","password_confirm":""}, apiId=1, expectedData={"username":["该字段不能为空。"],"password":["该字段不能为空。"],"password_confirm":["该字段不能为空。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.RegisterCase@27b22f74]" name="test" duration-ms="71" started-at="2019-12-24T01:31:37Z" description="注册测试" data-provider="data" finished-at="2019-12-24T01:31:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=1, name=register, type=post, url=http://api.keyou.site:8000/user/register/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=6, detail=重复以上的用户名+密码, params={"username":"zhang23jibo@945+","email":"1223122121@qq.com","password":"12345678","password_confirm":"12345678"}, apiId=1, expectedData={"username":["已存在一位使用该名字的用户。"],"email":["此邮箱已注册"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- cases.RegisterCase -->
      <class name="cases.AddProjectsCase">
        <test-method status="PASS" signature="init()[pri:0, instance:cases.AddProjectsCase@1917d90f]" name="init" is-config="true" duration-ms="33" started-at="2019-12-24T01:31:34Z" finished-at="2019-12-24T01:31:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:cases.LoginCase@22fba58c]" name="init" is-config="true" duration-ms="0" started-at="2019-12-24T01:31:34Z" finished-at="2019-12-24T01:31:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:cases.ProjectsListCase@2fe88a09]" name="init" is-config="true" duration-ms="0" started-at="2019-12-24T01:31:34Z" finished-at="2019-12-24T01:31:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:cases.ConfiguresCase@7e8a46b7]" name="init" is-config="true" duration-ms="0" started-at="2019-12-24T01:31:34Z" finished-at="2019-12-24T01:31:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:cases.RegisterCase@27b22f74]" name="init" is-config="true" duration-ms="1" started-at="2019-12-24T01:31:34Z" finished-at="2019-12-24T01:31:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.AddProjectsCase@1917d90f]" name="test" duration-ms="82" started-at="2019-12-24T01:31:38Z" description="新增项目测试" data-provider="data" finished-at="2019-12-24T01:31:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=5, name=add_projects, type=post, url=http://api.keyou.site:8000/projects/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=14, detail=新增项目信息, params={"name":"柠檬13900348016","leader":"12122121@qq.com","tester":"12345678","programmer":"12345678","publish_app":"ios","desc":"这是测试信息"}, apiId=5, expectedData=[{"value":"12122121@qq.com","expression":"$.leader"}], sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(pojo.API, pojo.Case)[pri:0, instance:cases.AddProjectsCase@1917d90f]" name="test" duration-ms="72" started-at="2019-12-24T01:31:38Z" description="新增项目测试" data-provider="data" finished-at="2019-12-24T01:31:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[API [id=5, name=add_projects, type=post, url=http://api.keyou.site:8000/projects/, contentType=json]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Case [id=15, detail=已存在项目信息, params={"name":"柠檬15800854186","leader":"12122121@qq.com","tester":"12345678","programmer":"12345679","publish_app":"ios","desc":"这是测试信息"}, apiId=5, expectedData={"name":["具有 项目名称 的 项目信息 已存在。"]}, sqlCheck=null]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="finish()[pri:0, instance:cases.AddProjectsCase@1917d90f]" name="finish" is-config="true" duration-ms="285" started-at="2019-12-24T01:31:39Z" finished-at="2019-12-24T01:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method status="PASS" signature="finish()[pri:0, instance:cases.ConfiguresCase@7e8a46b7]" name="finish" is-config="true" duration-ms="51" started-at="2019-12-24T01:31:39Z" finished-at="2019-12-24T01:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method status="PASS" signature="finish()[pri:0, instance:cases.LoginCase@22fba58c]" name="finish" is-config="true" duration-ms="48" started-at="2019-12-24T01:31:39Z" finished-at="2019-12-24T01:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method status="PASS" signature="finish()[pri:0, instance:cases.ProjectsListCase@2fe88a09]" name="finish" is-config="true" duration-ms="37" started-at="2019-12-24T01:31:39Z" finished-at="2019-12-24T01:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
        <test-method status="PASS" signature="finish()[pri:0, instance:cases.RegisterCase@27b22f74]" name="finish" is-config="true" duration-ms="77" started-at="2019-12-24T01:31:39Z" finished-at="2019-12-24T01:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- cases.AddProjectsCase -->
    </test> <!-- 测试接口 -->
  </suite> <!-- 柠檬前程贷 -->
</testng-results>
